name: Auth Service CI

on:
  push:
    branches: [ "main", "develop" ]
    paths:
      - 'authService/**'
  pull_request:
    branches: [ "main", "develop" ]
    paths:
      - 'authService/**'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build and Test Auth Service
        run: ./gradlew :authService:build :authService:jacocoTestReport

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=r2l-backend-auth
            -Dsonar.projectName=Auth Service
            -Dsonar.java.binaries=./authService/build/classes
            -Dsonar.java.source=17
            -Dsonar.coverage.jacoco.xmlReportPaths=./authService/build/reports/jacoco/test/jacocoTestReport.xml
            -Dsonar.sources=./authService/src/main/java
            -Dsonar.tests=./authService/src/test/java
            -Dsonar.java.source=17
            -Dsonar.qualitygate.wait=true

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0